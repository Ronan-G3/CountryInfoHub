{"ast":null,"code":"import React,{useState}from'react';import Layout from'./Components/Layout/Layout';import SearchInput from'./Components/SearchInput/SearchInput';import CountryInfoDisplay from'./Components/CountryInfoDisplay/CountryInfoDisplay';import{fetchCountryData}from'./Context/CountryService';import Spinner from'./Components/Spinner/Spinner.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[countryData,setCountryData]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const handleSearch=async countryName=>{setLoading(true);setError('');try{const data=await fetchCountryData(countryName);setCountryData(data);}catch(err){setError('Failed to fetch country data. Please try again.');console.error(err);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(Layout,{children:[/*#__PURE__*/_jsx(SearchInput,{onSearch:handleSearch}),loading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsx(CountryInfoDisplay,{countryData:countryData}),error&&/*#__PURE__*/_jsx(\"p\",{children:error})]});}export default App;","map":{"version":3,"names":["React","useState","Layout","SearchInput","CountryInfoDisplay","fetchCountryData","Spinner","jsx","_jsx","jsxs","_jsxs","App","countryData","setCountryData","loading","setLoading","error","setError","handleSearch","countryName","data","err","console","children","onSearch"],"sources":["C:/Users/Windows10/country-search/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Layout from './Components/Layout/Layout';\r\nimport SearchInput from './Components/SearchInput/SearchInput';\r\nimport CountryInfoDisplay from './Components/CountryInfoDisplay/CountryInfoDisplay';\r\nimport { fetchCountryData } from './Context/CountryService';  \r\nimport Spinner from './Components/Spinner/Spinner.js';\r\n\r\nfunction App() {\r\n  const [countryData, setCountryData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSearch = async (countryName) => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const data = await fetchCountryData(countryName);\r\n      setCountryData(data);\r\n    } catch (err) {\r\n      setError('Failed to fetch country data. Please try again.');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <Layout>\r\n      <SearchInput onSearch={handleSearch} />\r\n      {loading ? <Spinner /> : <CountryInfoDisplay countryData={countryData} />}\r\n      {error && <p>{error}</p>}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,MAAM,KAAM,4BAA4B,CAC/C,MAAO,CAAAC,WAAW,KAAM,sCAAsC,CAC9D,MAAO,CAAAC,kBAAkB,KAAM,oDAAoD,CACnF,OAASC,gBAAgB,KAAQ,0BAA0B,CAC3D,MAAO,CAAAC,OAAO,KAAM,iCAAiC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEtD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAiB,YAAY,CAAG,KAAO,CAAAC,WAAW,EAAK,CAC1CJ,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,EAAE,CAAC,CACZ,GAAI,CACF,KAAM,CAAAG,IAAI,CAAG,KAAM,CAAAf,gBAAgB,CAACc,WAAW,CAAC,CAChDN,cAAc,CAACO,IAAI,CAAC,CACtB,CAAE,MAAOC,GAAG,CAAE,CACZJ,QAAQ,CAAC,iDAAiD,CAAC,CAC3DK,OAAO,CAACN,KAAK,CAACK,GAAG,CAAC,CACpB,CAAC,OAAS,CACRN,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAGD,mBACEL,KAAA,CAACR,MAAM,EAAAqB,QAAA,eACLf,IAAA,CAACL,WAAW,EAACqB,QAAQ,CAAEN,YAAa,CAAE,CAAC,CACtCJ,OAAO,cAAGN,IAAA,CAACF,OAAO,GAAE,CAAC,cAAGE,IAAA,CAACJ,kBAAkB,EAACQ,WAAW,CAAEA,WAAY,CAAE,CAAC,CACxEI,KAAK,eAAIR,IAAA,MAAAe,QAAA,CAAIP,KAAK,CAAI,CAAC,EAClB,CAAC,CAEb,CAEA,cAAe,CAAAL,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}