{"ast":null,"code":"import React from'react';import styles from'./CountryInfoDisplay.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CountryInfoDisplay=_ref=>{var _country$capital,_country$population;let{countryData}=_ref;if(!countryData||countryData.length===0)return/*#__PURE__*/_jsx(\"div\",{children:\"...\"});const country=countryData[0];if(!country||!country.name||!country.flags){return/*#__PURE__*/_jsx(\"div\",{children:\"Invalid country data received.\"});}// Additional details\nconst languages=country.languages?Object.values(country.languages).join(', '):'N/A';const currencies=country.currencies?Object.values(country.currencies).map(currency=>currency.name).join(', '):'N/A';return/*#__PURE__*/_jsxs(\"div\",{className:styles.countryDisplayContainer,children:[/*#__PURE__*/_jsx(\"h2\",{children:country.name.common||'N/A'}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Capital: \",((_country$capital=country.capital)===null||_country$capital===void 0?void 0:_country$capital[0])||'N/A']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Population: \",((_country$population=country.population)===null||_country$population===void 0?void 0:_country$population.toLocaleString())||'N/A']}),\" \",/*#__PURE__*/_jsxs(\"p\",{children:[\"Region: \",country.region||'N/A']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Languages: \",languages]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Currency: \",currencies]}),/*#__PURE__*/_jsx(\"img\",{src:country.flags.png,alt:\"Flag of \".concat(country.name.common),style:{maxWidth:'200px',marginTop:'10px'}}),country.maps&&/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"a\",{href:country.maps.googleMaps,target:\"_blank\",rel:\"noopener noreferrer\",children:\"View on Google Maps\"})})]});};export default CountryInfoDisplay;","map":{"version":3,"names":["React","styles","jsx","_jsx","jsxs","_jsxs","CountryInfoDisplay","_ref","_country$capital","_country$population","countryData","length","children","country","name","flags","languages","Object","values","join","currencies","map","currency","className","countryDisplayContainer","common","capital","population","toLocaleString","region","src","png","alt","concat","style","maxWidth","marginTop","maps","href","googleMaps","target","rel"],"sources":["C:/Users/Windows10/country-search/frontend/src/Components/CountryInfoDisplay/CountryInfoDisplay.js"],"sourcesContent":["import React from 'react';\r\nimport styles from './CountryInfoDisplay.module.css'; \r\n\r\nconst CountryInfoDisplay = ({ countryData }) => {\r\n  if (!countryData || countryData.length === 0) return <div>...</div>;\r\n\r\n  const country = countryData[0];\r\n  if (!country || !country.name || !country.flags) {\r\n    return <div>Invalid country data received.</div>;\r\n  }\r\n\r\n  // Additional details\r\n  const languages = country.languages ? Object.values(country.languages).join(', ') : 'N/A';\r\n  const currencies = country.currencies ? Object.values(country.currencies).map(currency => currency.name).join(', ') : 'N/A';\r\n\r\n  return (\r\n    <div className={styles.countryDisplayContainer}>\r\n      <h2>{country.name.common || 'N/A'}</h2>\r\n      <p>Capital: {country.capital?.[0] || 'N/A'}</p>\r\n      <p>Population: {country.population?.toLocaleString() || 'N/A'}</p> {/* Formatting population with commas */}\r\n      <p>Region: {country.region || 'N/A'}</p>\r\n      <p>Languages: {languages}</p>\r\n      <p>Currency: {currencies}</p>\r\n      <img src={country.flags.png} alt={`Flag of ${country.name.common}`} style={{ maxWidth: '200px', marginTop: '10px' }} />\r\n      {}\r\n      {country.maps && (\r\n        <p>\r\n          <a href={country.maps.googleMaps} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            View on Google Maps\r\n          </a>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryInfoDisplay;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,iCAAiC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAErD,KAAM,CAAAC,kBAAkB,CAAGC,IAAA,EAAqB,KAAAC,gBAAA,CAAAC,mBAAA,IAApB,CAAEC,WAAY,CAAC,CAAAH,IAAA,CACzC,GAAI,CAACG,WAAW,EAAIA,WAAW,CAACC,MAAM,GAAK,CAAC,CAAE,mBAAOR,IAAA,QAAAS,QAAA,CAAK,KAAG,CAAK,CAAC,CAEnE,KAAM,CAAAC,OAAO,CAAGH,WAAW,CAAC,CAAC,CAAC,CAC9B,GAAI,CAACG,OAAO,EAAI,CAACA,OAAO,CAACC,IAAI,EAAI,CAACD,OAAO,CAACE,KAAK,CAAE,CAC/C,mBAAOZ,IAAA,QAAAS,QAAA,CAAK,gCAA8B,CAAK,CAAC,CAClD,CAEA;AACA,KAAM,CAAAI,SAAS,CAAGH,OAAO,CAACG,SAAS,CAAGC,MAAM,CAACC,MAAM,CAACL,OAAO,CAACG,SAAS,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC,CAAG,KAAK,CACzF,KAAM,CAAAC,UAAU,CAAGP,OAAO,CAACO,UAAU,CAAGH,MAAM,CAACC,MAAM,CAACL,OAAO,CAACO,UAAU,CAAC,CAACC,GAAG,CAACC,QAAQ,EAAIA,QAAQ,CAACR,IAAI,CAAC,CAACK,IAAI,CAAC,IAAI,CAAC,CAAG,KAAK,CAE3H,mBACEd,KAAA,QAAKkB,SAAS,CAAEtB,MAAM,CAACuB,uBAAwB,CAAAZ,QAAA,eAC7CT,IAAA,OAAAS,QAAA,CAAKC,OAAO,CAACC,IAAI,CAACW,MAAM,EAAI,KAAK,CAAK,CAAC,cACvCpB,KAAA,MAAAO,QAAA,EAAG,WAAS,CAAC,EAAAJ,gBAAA,CAAAK,OAAO,CAACa,OAAO,UAAAlB,gBAAA,iBAAfA,gBAAA,CAAkB,CAAC,CAAC,GAAI,KAAK,EAAI,CAAC,cAC/CH,KAAA,MAAAO,QAAA,EAAG,cAAY,CAAC,EAAAH,mBAAA,CAAAI,OAAO,CAACc,UAAU,UAAAlB,mBAAA,iBAAlBA,mBAAA,CAAoBmB,cAAc,CAAC,CAAC,GAAI,KAAK,EAAI,CAAC,IAAC,cACnEvB,KAAA,MAAAO,QAAA,EAAG,UAAQ,CAACC,OAAO,CAACgB,MAAM,EAAI,KAAK,EAAI,CAAC,cACxCxB,KAAA,MAAAO,QAAA,EAAG,aAAW,CAACI,SAAS,EAAI,CAAC,cAC7BX,KAAA,MAAAO,QAAA,EAAG,YAAU,CAACQ,UAAU,EAAI,CAAC,cAC7BjB,IAAA,QAAK2B,GAAG,CAAEjB,OAAO,CAACE,KAAK,CAACgB,GAAI,CAACC,GAAG,YAAAC,MAAA,CAAapB,OAAO,CAACC,IAAI,CAACW,MAAM,CAAG,CAACS,KAAK,CAAE,CAAEC,QAAQ,CAAE,OAAO,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAE,CAAC,CAEtHvB,OAAO,CAACwB,IAAI,eACXlC,IAAA,MAAAS,QAAA,cACET,IAAA,MAAGmC,IAAI,CAAEzB,OAAO,CAACwB,IAAI,CAACE,UAAW,CAACC,MAAM,CAAC,QAAQ,CAACC,GAAG,CAAC,qBAAqB,CAAA7B,QAAA,CAAC,qBAE5E,CAAG,CAAC,CACH,CACJ,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAN,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}