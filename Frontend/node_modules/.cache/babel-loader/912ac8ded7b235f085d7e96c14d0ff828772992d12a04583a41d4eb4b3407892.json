{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows10\\\\country-search\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Layout from './Components/Layout/Layout';\nimport SearchInput from './Components/SearchInput/SearchInput';\nimport CountryInfoDisplay from './Components/CountryInfoDisplay/CountryInfoDisplay';\nimport { fetchCountryData } from './Context/CountryService';\nimport Spinner from './Components/Spinner/Spinner.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [countryData, setCountryData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSearch = async countryName => {\n    setLoading(true);\n    setError('');\n    try {\n      const data = await fetchCountryData(countryName);\n      setCountryData(data);\n    } catch (err) {\n      setError('Failed to fetch country data. Please try again.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(CountryInfoDisplay, {\n      countryData: countryData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 32\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ALyAFZfouHq+vJuLi7l5bqm1hCY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Layout","SearchInput","CountryInfoDisplay","fetchCountryData","Spinner","jsxDEV","_jsxDEV","App","_s","countryData","setCountryData","loading","setLoading","error","setError","handleSearch","countryName","data","err","console","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Windows10/country-search/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Layout from './Components/Layout/Layout';\r\nimport SearchInput from './Components/SearchInput/SearchInput';\r\nimport CountryInfoDisplay from './Components/CountryInfoDisplay/CountryInfoDisplay';\r\nimport { fetchCountryData } from './Context/CountryService';  \r\nimport Spinner from './Components/Spinner/Spinner.js';\r\n\r\nfunction App() {\r\n  const [countryData, setCountryData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSearch = async (countryName) => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const data = await fetchCountryData(countryName);\r\n      setCountryData(data);\r\n    } catch (err) {\r\n      setError('Failed to fetch country data. Please try again.');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <Layout>\r\n      <SearchInput onSearch={handleSearch} />\r\n      {loading ? <Spinner /> : <CountryInfoDisplay countryData={countryData} />}\r\n      {error && <p>{error}</p>}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,OAAOC,kBAAkB,MAAM,oDAAoD;AACnF,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,OAAOC,OAAO,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMgB,YAAY,GAAG,MAAOC,WAAW,IAAK;IAC1CJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,MAAMG,IAAI,GAAG,MAAMd,gBAAgB,CAACa,WAAW,CAAC;MAChDN,cAAc,CAACO,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZJ,QAAQ,CAAC,iDAAiD,CAAC;MAC3DK,OAAO,CAACN,KAAK,CAACK,GAAG,CAAC;IACpB,CAAC,SAAS;MACRN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAGD,oBACEN,OAAA,CAACN,MAAM;IAAAoB,QAAA,gBACLd,OAAA,CAACL,WAAW;MAACoB,QAAQ,EAAEN;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACtCd,OAAO,gBAAGL,OAAA,CAACF,OAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGnB,OAAA,CAACJ,kBAAkB;MAACO,WAAW,EAAEA;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACxEZ,KAAK,iBAAIP,OAAA;MAAAc,QAAA,EAAIP;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEb;AAACjB,EAAA,CA3BQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}