{"ast":null,"code":"const BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://165.22.113.31/api';\n\n// Function to fetch country data from the backend\nconst fetchCountryData = async countryName => {\n  try {\n    // Encodes the country name to ensure the URL is properly formatted\n    const response = await fetch(`${BASE_URL}/countries/${encodeURIComponent(countryName)}`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data; // This should be the data returned from the REST Countries API\n  } catch (error) {\n    console.error(\"Could not fetch country data:\", error);\n    // Handle errors\n    throw error;\n  }\n};\nexport { fetchCountryData };","map":{"version":3,"names":["BASE_URL","process","env","REACT_APP_API_BASE_URL","fetchCountryData","countryName","response","fetch","encodeURIComponent","ok","Error","status","data","json","error","console"],"sources":["C:/Users/Windows10/country-search/frontend/src/Context/CountryService.js"],"sourcesContent":["const BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://165.22.113.31/api';\r\n\r\n\r\n// Function to fetch country data from the backend\r\nconst fetchCountryData = async (countryName) => {\r\n  try {\r\n    // Encodes the country name to ensure the URL is properly formatted\r\n    const response = await fetch(`${BASE_URL}/countries/${encodeURIComponent(countryName)}`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    return data; // This should be the data returned from the REST Countries API\r\n  } catch (error) {\r\n    console.error(\"Could not fetch country data:\", error);\r\n    // Handle errors\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport { fetchCountryData };"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,0BAA0B;;AAGjF;AACA,MAAMC,gBAAgB,GAAG,MAAOC,WAAW,IAAK;EAC9C,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,QAAS,cAAaQ,kBAAkB,CAACH,WAAW,CAAE,EAAC,CAAC;IACxF,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBJ,QAAQ,CAACK,MAAO,EAAC,CAAC;IAC3D;IACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD;IACA,MAAMA,KAAK;EACb;AACF,CAAC;AAED,SAASV,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}