{"ast":null,"code":"const BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://localhost:3001/api';// Function to fetch country data from the backend\nconst fetchCountryData=async countryName=>{try{// Encodes the country name to ensure the URL is properly formatted\nconst response=await fetch(\"\".concat(BASE_URL,\"/countries/\").concat(encodeURIComponent(countryName)));if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const data=await response.json();return data;// This should be the data returned from the REST Countries API\n}catch(error){console.error(\"Could not fetch country data:\",error);// Handle errors\nthrow error;}};export{fetchCountryData};","map":{"version":3,"names":["BASE_URL","process","env","REACT_APP_API_BASE_URL","fetchCountryData","countryName","response","fetch","concat","encodeURIComponent","ok","Error","status","data","json","error","console"],"sources":["C:/Users/Windows10/country-search/frontend/src/Context/CountryService.js"],"sourcesContent":["const BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001/api';\r\n\r\n\r\n// Function to fetch country data from the backend\r\nconst fetchCountryData = async (countryName) => {\r\n  try {\r\n    // Encodes the country name to ensure the URL is properly formatted\r\n    const response = await fetch(`${BASE_URL}/countries/${encodeURIComponent(countryName)}`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    return data; // This should be the data returned from the REST Countries API\r\n  } catch (error) {\r\n    console.error(\"Could not fetch country data:\", error);\r\n    // Handle errors\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport { fetchCountryData };"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAI,2BAA2B,CAGlF;AACA,KAAM,CAAAC,gBAAgB,CAAG,KAAO,CAAAC,WAAW,EAAK,CAC9C,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIR,QAAQ,gBAAAQ,MAAA,CAAcC,kBAAkB,CAACJ,WAAW,CAAC,CAAE,CAAC,CACxF,GAAI,CAACC,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,wBAAAH,MAAA,CAAwBF,QAAQ,CAACM,MAAM,CAAE,CAAC,CAC3D,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CAAE;AACf,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrD;AACA,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,OAASX,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}