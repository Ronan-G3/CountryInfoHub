{"version":3,"sources":["Components/Layout/Layout.module.css","Components/SearchInput/SearchInput.module.css","Components/CountryInfoDisplay/CountryInfoDisplay.module.css","Components/Spinner/Spinner.module.css","Components/Layout/Layout.js","Components/SearchInput/SearchInput.js","Components/CountryInfoDisplay/CountryInfoDisplay.js","Context/CountryService.js","Components/Spinner/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","layout","header","banner","logoContainer","logo","mainContent","footer","searchContainer","searchInput","searchButton","CountryInfoDisplay","countryDisplayContainer","countryName","countryDetail","countryDetailIcon","countryFlag","spinner","Layout","_ref","children","React","createElement","className","styles","src","concat","process","alt","SearchInput","onSearch","inputValue","setInputValue","useState","type","value","onChange","e","target","onKeyDown","event","key","placeholder","name","onClick","handleSearchClick","_country$capital","_country$population","countryData","length","country","flags","languages","Object","values","join","currencies","map","currency","common","capital","population","toLocaleString","region","png","style","maxWidth","marginTop","maps","href","googleMaps","rel","fetchCountryData","async","response","fetch","encodeURIComponent","ok","Error","status","json","error","console","Spinner","App","setCountryData","loading","setLoading","setError","data","err","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.574062fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__2b32i\",\"header\":\"Layout_header__1RuBK\",\"banner\":\"Layout_banner__2eCZy\",\"logoContainer\":\"Layout_logoContainer__3Bm3H\",\"logo\":\"Layout_logo__125R6\",\"mainContent\":\"Layout_mainContent__1hfF7\",\"footer\":\"Layout_footer__1_FhH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"SearchInput_searchContainer__1fAbh\",\"searchInput\":\"SearchInput_searchInput__W4HSo\",\"searchButton\":\"SearchInput_searchButton__PIucb\",\"header\":\"SearchInput_header__2WISw\",\"footer\":\"SearchInput_footer__1Y1Z0\",\"mainContent\":\"SearchInput_mainContent__1I5AC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CountryInfoDisplay\":\"CountryInfoDisplay_CountryInfoDisplay__1YMJ_\",\"countryDisplayContainer\":\"CountryInfoDisplay_countryDisplayContainer__1TcC7\",\"countryName\":\"CountryInfoDisplay_countryName__3hkzH\",\"countryDetail\":\"CountryInfoDisplay_countryDetail__AK5Vv\",\"countryDetailIcon\":\"CountryInfoDisplay_countryDetailIcon__30Eaj\",\"countryFlag\":\"CountryInfoDisplay_countryFlag__Q9-C9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__DvkTH\"};","import React from 'react';\r\nimport styles from './Layout.module.css';\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div className={styles.layout}>\r\n      <header className={styles.header}>\r\n        <img src={`${process.env.PUBLIC_URL}/Country_Info_Banner2.png`} alt=\"Country Info Banner\" className={styles.banner} />\r\n        </header>\r\n      <div className={styles.logoContainer}>\r\n        <img src={`${process.env.PUBLIC_URL}/Country_Info.png`} alt=\"Country Info Hub Logo\" className={styles.logo} />\r\n      </div>\r\n      <main className={styles.mainContent}>\r\n        {children}\r\n      </main>\r\n      <footer className={styles.footer}>Â© 2023 CountryInfoHub</footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState } from \"react\";\r\nimport styles from './SearchInput.module.css';\r\n\r\nconst SearchInput = ({ onSearch }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleSearchClick = () => {\r\n    onSearch(inputValue);\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      onSearch(inputValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.searchContainer}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n        onKeyDown={handleKeyDown}\r\n        placeholder=\"Enter country name\"\r\n        className={styles.searchInput}\r\n        name=\"countryName\" // Added name attribute\r\n      />\r\n      <button onClick={handleSearchClick} className={styles.searchButton}>\r\n        Search\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\nimport styles from './CountryInfoDisplay.module.css'; \r\n\r\nconst CountryInfoDisplay = ({ countryData }) => {\r\n  if (!countryData || countryData.length === 0) return <div>...</div>;\r\n\r\n  const country = countryData[0];\r\n  if (!country || !country.name || !country.flags) {\r\n    return <div>Invalid country data received.</div>;\r\n  }\r\n\r\n  // Additional details\r\n  const languages = country.languages ? Object.values(country.languages).join(', ') : 'N/A';\r\n  const currencies = country.currencies ? Object.values(country.currencies).map(currency => currency.name).join(', ') : 'N/A';\r\n\r\n  return (\r\n    <div className={styles.countryDisplayContainer}>\r\n      <h2>{country.name.common || 'N/A'}</h2>\r\n      <p>Capital: {country.capital?.[0] || 'N/A'}</p>\r\n      <p>Population: {country.population?.toLocaleString() || 'N/A'}</p> {/* Formatting population with commas */}\r\n      <p>Region: {country.region || 'N/A'}</p>\r\n      <p>Languages: {languages}</p>\r\n      <p>Currency: {currencies}</p>\r\n      <img src={country.flags.png} alt={`Flag of ${country.name.common}`} style={{ maxWidth: '200px', marginTop: '10px' }} />\r\n      {}\r\n      {country.maps && (\r\n        <p>\r\n          <a href={country.maps.googleMaps} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            View on Google Maps\r\n          </a>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryInfoDisplay;\r\n","const BASE_URL = 'https://lobster-app-a8stm.ondigitalocean.app/api'; \r\n\r\n\r\n// Function to fetch country data from the backend\r\nconst fetchCountryData = async (countryName) => {\r\n  try {\r\n    // Encodes the country name to ensure the URL is properly formatted\r\n    const response = await fetch(`${BASE_URL}/countries/${encodeURIComponent(countryName)}`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    return data; // This should be the data returned from the REST Countries API\r\n  } catch (error) {\r\n    console.error(\"Could not fetch country data:\", error);\r\n    // Handle errors\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport { fetchCountryData };","import React from 'react';\r\nimport styles from './Spinner.module.css';\r\n\r\nconst Spinner = () => (\r\n  <div className={styles.spinner}></div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { useState } from 'react';\nimport Layout from './Components/Layout/Layout';\nimport SearchInput from './Components/SearchInput/SearchInput';\nimport CountryInfoDisplay from './Components/CountryInfoDisplay/CountryInfoDisplay';\nimport { fetchCountryData } from './Context/CountryService';  \nimport Spinner from './Components/Spinner/Spinner.js';\n\nfunction App() {\n  const [countryData, setCountryData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSearch = async (countryName) => {\n    setLoading(true);\n    setError('');\n    try {\n      const data = await fetchCountryData(countryName);\n      setCountryData(data);\n    } catch (err) {\n      setError('Failed to fetch country data. Please try again.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n\n  return (\n    <Layout>\n      <SearchInput onSearch={handleSearch} />\n      {loading ? <Spinner /> : <CountryInfoDisplay countryData={countryData} />}\n      {error && <p>{error}</p>}\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}